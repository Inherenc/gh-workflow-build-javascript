name: build:javascript:microservice

on:
  workflow_call:
    secrets:
      PLANTON_CLOUD_SERVICE_CLIENT_ID:
        required: true
      PLANTON_CLOUD_SERVICE_CLIENT_SECRET:
        required: true
    inputs:
      PLANTON_CLOUD_SERVICE_CLI_ENV:
        required: true
        type: string
      PLANTON_CLOUD_ARTIFACT_STORE_ID:
        required: true
        type: string
      PLANTON_CLOUD_ARTIFACT_STORE_DOCKER_REPO_HOSTNAME:
        required: true
        type: string
      CONTAINER_IMAGE_NAME:
        required: true
        type: string
      CONTAINER_IMAGE_VERSION:
        required: true
        type: string

jobs:
  build-code:
    runs-on: ubuntu-latest
    name: javscript build
    steps:
      - uses: actions/checkout@v3
      # https://github.com/vercel/next.js/issues/38330#issuecomment-1178913616
      - uses: actions/setup-node@v3
        with:
          node-version: 17
      - name: setup yarn
        run: |
          corepack enable
          corepack prepare yarn@v3.2.3 --activate
          yarn policies set-version v3.2.3
      - uses: actions/setup-node@v3
        with:
          node-version: 17
          cache: yarn
      - uses: plantoncloud/gh-action-build-javascript@main
        with:
          planton_cloud_service_cli_env: ${{ inputs.PLANTON_CLOUD_SERVICE_CLI_ENV }}
          planton_cloud_service_client_id: ${{ secrets.PLANTON_CLOUD_SERVICE_CLIENT_ID }}
          planton_cloud_service_client_secret: ${{ secrets.PLANTON_CLOUD_SERVICE_CLIENT_SECRET }}
          planton_cloud_artifact_store_id: ${{ inputs.PLANTON_CLOUD_ARTIFACT_STORE_ID }}
      - name: zip artifacts
        run: zip -r pc_artifacts.zip pc_artifacts/
      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-zip
          path: pc_artifacts.zip
          if-no-files-found: error

  build-image:
    runs-on: ubuntu-latest
    needs: build-code
    name: docker build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: build-zip
          path: .
      - name: unzip artifacts
        run: |
          pwd
          ls -al
          unzip pc_artifacts.zip
      - uses: plantoncloud/gh-action-build-docker@main
        with:
          planton_cloud_service_cli_env: ${{ inputs.PLANTON_CLOUD_SERVICE_CLI_ENV }}
          planton_cloud_service_client_id: ${{ secrets.PLANTON_CLOUD_SERVICE_CLIENT_ID }}
          planton_cloud_service_client_secret: ${{ secrets.PLANTON_CLOUD_SERVICE_CLIENT_SECRET }}
          planton_cloud_artifact_store_id: ${{ inputs.PLANTON_CLOUD_ARTIFACT_STORE_ID }}
          planton_cloud_artifact_store_docker_repo_hostname: ${{ inputs.PLANTON_CLOUD_ARTIFACT_STORE_DOCKER_REPO_HOSTNAME }}
          container_image_name: ${{ inputs.CONTAINER_IMAGE_NAME }}
          container_image_version: ${{ inputs.CONTAINER_IMAGE_VERSION }}
